AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless application using API Gateway, Lambda, and DynamoDB

Resources:
  # DynamoDB Table
  TodoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TableName: todos

  # API Gateway
  TodosApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type'"
        AllowOrigin: "'*'"

  GetTodosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: get_todos/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /todos
            Method: GET
            RestApiId: !Ref TodosApi
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodoTable

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_todos/
      Handler: app.lambda_handler
      Runtime: python3.9
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /todos
            Method: POST
            RestApiId: !Ref TodosApi
      Environment:
        Variables:
          TODOS_TABLE: !Ref TodoTable

  # IAM Role for Lambda Functions
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
      RoleName: LambdaRole

Outputs:
  ApiURL:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub 'https://${TodosApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'

